package ScrumProject;

import java.beans.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.resource.cci.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfDB;
import oru.inf.InfException;
//import confsg.DBConnect;

/**
 * * @author Saron
 * * @author Manne
 * * @author Jiyan
 * * @author Victoria
 * * @author Fatemeh
 * * @author Cornelia
 * * @author Samer
 * * @author Michael
 * * @author Rany
 * * @author Oday
 */
public class SvaraInbjudanMote1 extends javax.swing.JFrame {

    private InfDB idb;
    private User userId;
    private static int anvid;

    /**
     * Creates new form SvaraInbjudanMote
     */
    //Connection med databasen.
    public SvaraInbjudanMote1(int id) {
        this.anvid = id;
        initComponents();
        userId = new User(anvid);
        try {
            idb = new InfDB("C:\\db\\Bloggdb.FDB");
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Databasuppkopplingen har inte lyckats!\n");
            System.out.print("Databasuppkoplingen misslyckades. Felmeddelande: " + e.getMessage());
        }
        allMejl();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Tillbacka = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taText = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnSkicka = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Svara på inbjudan");

        Tillbacka.setText("Tillbaka");
        Tillbacka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TillbackaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Tillbacka)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(Tillbacka))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Skicka svar");

        taText.setColumns(20);
        taText.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        taText.setRows(5);
        jScrollPane2.setViewportView(taText);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Dina möten");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Meddelande", "Avsändare"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jButton3.setText("Se meddelanden ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Till");

        btnSkicka.setText("Skicka");
        btnSkicka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkickaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(218, 218, 218))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(btnSkicka, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(38, 38, 38)
                .addComponent(btnSkicka)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Hämtar mail och returnerar den i en ArrayList.
    public ArrayList kombobox() {
        ArrayList<String> mejl = null;
        try {

            mejl = idb.fetchColumn("SELECT MEJL from ANSTALLD");

        } catch (InfException ex) {
            Logger.getLogger(KallaTillMote1.class.getName()).log(Level.SEVERE, null, ex);
        }
        return mejl;
    }
    //Hämtar ArrayList från förgående metod och lägger in den i JComboBox.
    public void allMejl() {
        ArrayList<String> a = kombobox();
        int i = 0;
        while (i < a.size()) {
            jComboBox1.addItem(a.get(i));
            i++;
        }

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton1ActionPerformed
    /*
    * Metoden hämtar ut relevanta värdet för att visa upp i tabellen.
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {
            if (KollaMjel() == true) {
                String query = ("SELECT meddelande,sender from skicka_inbjudan_mote WHERE ANSTALLDID = '" + anvid + "'");
                ArrayList<HashMap<String, String>> list = null;

                list = idb.fetchRows(query);

                if (list != null) {//om lista bestÃ¥r av vÃ¤rden sÃ¥ fÃ¶r att hÃ¤mta ut antalet rader.

                    DefaultTableModel dt = (DefaultTableModel) jTable1.getModel();

                    int row = dt.getRowCount();
                    int i = row - 1;
                    while (i >= 0) {

                        dt.removeRow(i);

                        i--;

                    }
                    for (HashMap<String, String> value : list) {//loopar igenom värderna för att få ut meddelande och sender. 
                        String MEDDELANDE = String.valueOf(value.get("MEDDELANDE"));
                        String SENDER = value.get("SENDER");

                        String allt[] = {MEDDELANDE, SENDER};

                        dt.addRow(allt);

                    }

                }
            }
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "fel");

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /*
    *  Metoden skickar in användarens förslag och får tid till ett möte.
     */
    private void btnSkickaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkickaActionPerformed

        String text = taText.getText();
        String admin = jComboBox1.getSelectedItem().toString();

        String id;
        String rattMjel = "";

        try {
            id = idb.fetchSingle("select max(INBJUDANID) from INBJUDAN_MOTE");//hämttar max id fråm tabellen.
            int moteID = Integer.parseInt(id);
            rattMjel = idb.fetchSingle("SELECT ANSTALLDID FROM SKICKA_INBJUDAN_MOTE WHERE ANSTALLDID = '" + anvid + "'");
            moteID += 1;//Hämtar det högsta id i tabellen med 1 och lägger till värden.
            String anv = idb.fetchSingle("SELECT MEJL FROM ANSTALLD WHERE MEJL = '" + anvid + "'");//hämtar ut mejl från den personen som har skickat mejlet.
            String anvID = idb.fetchSingle("SELECT anstalldid FROM ANSTALLD WHERE MEJL = '" + admin + "'");//hämtar ut id från personen man vill skicka mejlet till.
            String fornman = idb.fetchSingle("SELECT FORNAMN FROM ANSTALLD WHERE MEJL = '" + admin + "'");//hämtar ut namn från den personen man vill skicka mailförslag till.
            String efternamn = idb.fetchSingle("SELECT EFTERNAMN FROM ANSTALLD WHERE MEJL = '" + admin + "'");//hämtar ut efternamn från den personen som man vill skicka möteförslag till.
            String user = idb.fetchSingle("SELECT MEJL FROM ANSTALLD WHERE ANSTALLDID = '" + anvid + "'");
            try {

                if (!Validering.faltArTomtAreaSaronManne(taText)) {
                    idb.insert("INSERT INTO INBJUDAN_MOTE(INBJUDANID, DATUM, ANSTALLDID,MEJL)"
                            + "VALUES(" + moteID + ",'" + text + "'," + anvID + "," + "'" + user + "'" + ")");//lägger till inbjudan till möte i tabellen.
                    JOptionPane.showMessageDialog(null, "Ditt svar har skickats till " + fornman + " " + efternamn);
                }

            } catch (InfException e) {
                System.out.println("INSERT INTO INBJUDAN_MOTE(INBJUDANID, DATUM, ANSTALLDID,MEJL)"
                        + "VALUES(" + moteID + ",'" + text + "'," + anvID + "," + "'" + anvid + "'" + ")");
                JOptionPane.showMessageDialog(null, "Något gick fel.");
            }
        } catch (InfException e) {
            Logger.getLogger(KallaTillMote1.class.getName()).log(Level.SEVERE, null, e);
            System.out.println("Internt felmeddelande:" + e.getMessage());

        }

    }//GEN-LAST:event_btnSkickaActionPerformed
    //vi kontrollerar att anställdID's så att den är korrekt. Vi returnerar ett värde med true eller false.
    private boolean KollaMjel() {
        boolean kollaMjel = false;
        try {
            String rattMjel = idb.fetchSingle("SELECT ANSTALLDID FROM SKICKA_INBJUDAN_MOTE WHERE ANSTALLDID = '" + anvid + "'");
            kollaMjel = true;
        } catch (InfException ex) {

            Logger.getLogger(SvaraInbjudanMote1.class.getName()).log(Level.SEVERE, null, ex);
        }

        return kollaMjel;
    }


    private void TillbackaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TillbackaActionPerformed
        HuvudmenyUser huvM = new HuvudmenyUser(anvid);
        huvM.setVisible(true);
        dispose();

    }//GEN-LAST:event_TillbackaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SvaraInbjudanMote1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SvaraInbjudanMote1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SvaraInbjudanMote1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SvaraInbjudanMote1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SvaraInbjudanMote1(anvid).setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Tillbacka;
    private javax.swing.JButton btnSkicka;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea taText;
    // End of variables declaration//GEN-END:variables
}

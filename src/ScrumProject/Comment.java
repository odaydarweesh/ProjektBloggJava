package ScrumProject;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFrame;
import oru.inf.InfDB;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfException;

/**
 * * @author Saron
 * * @author Manne
 * * @author Jiyan
 * * @author Victoria
 * * @author Fatemeh
 * * @author Cornelia
 * * @author Samer
 * * @author Michael
 * * @author Rany
 * * @author Oday
 */
public class Comment extends javax.swing.JFrame {

    private InfDB bloggdb;
    private int id;
    private String postID;
    private User userId;
    private Admin adminId;
    
//Hämtar databasen för att kunna använda i Comment klassen. 
    public Comment(int id, String postID) {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        initComponents();
        adminId = new Admin(id);
        userId = new User(id);
        this.id = id;
        this.postID = postID;

        try {
            bloggdb = new InfDB("C:\\db\\Bloggdb.FDB");
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Databasuppkopplingen har inte lyckats!\n");
            System.out.print("Databasuppkopplingen misslyckad. Felmeddelande: " + e.getMessage());
        }
        this.setLocationRelativeTo(null);

        AllaKommentarer();
        Dinakommentar();
        läggakommentarIDRadigera();
        läggakommentarId();
    }
//En metod som listar upp alla kommentarer och lägger in dem i tabellen via Hashmap.
    private void AllaKommentarer() {

        ArrayList<HashMap<String, String>> tableList;
        try {

            String query = ("SELECT * FROM kommentar where postid = '" + postID + "';");

            tableList = bloggdb.fetchRows(query);

            if (tableList != null) {

                DefaultTableModel dt = (DefaultTableModel) jTable1.getModel();

                int row = dt.getRowCount();
                int i = row - 1;
                while (i >= 0) {

                    dt.removeRow(i);

                    i--;
                }

                for (HashMap<String, String> value : tableList) {
                    String KOMMENTARID = String.valueOf(value.get("KOMMENTARID"));
                    String TEXT = value.get("TEXT");
                    String ANSTALLD = value.get("ANSTALLDID");
                    String POST = value.get("POSTID");

                    String allt[] = {KOMMENTARID, TEXT, ANSTALLD, POST};

                    dt.addRow(allt);

                }
            }
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");

        }

    }
//Här listas alla ens egna kommentarer. 
    private void Dinakommentar() {

        ArrayList<HashMap<String, String>> tableList = null;

        try {

            String query = ("SELECT * FROM kommentar where postid = '" + postID + "'AND ANSTALLDID = '" + id + "';");

            tableList = bloggdb.fetchRows(query);

            if (tableList != null) {

                DefaultTableModel dt = (DefaultTableModel) jTable2.getModel();

                int row = dt.getRowCount();
                int i = row - 1;

                while (i >= 0) {

                    dt.removeRow(i);

                    i--;
                }

                for (HashMap<String, String> value : tableList) {
                    String KOMMENTARID = String.valueOf(value.get("KOMMENTARID"));
                    String TEXT = value.get("TEXT");
                    String ANSTALLD = value.get("ANSTALLDID");
                    String POST = value.get("POSTID");

                    String allt[] = {KOMMENTARID, TEXT, ANSTALLD, POST};

                    dt.addRow(allt);

                }

            }
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Något gick fel");

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        NyKommentar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        NyaKomment = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        Redigeratf = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        ComboIdKommentar = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        Tillbacka = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "KOMMENTARID", "TEXT", "ANSTÄLLDID", "POSTID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "KOMMENTARID", "TEXT", "ANSTÄLLDID", "POSTID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Allas kommentarer:");

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Mina kommentarer:");

        NyKommentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NyKommentarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Skriv ny kommentar:");

        NyaKomment.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NyaKomment.setText("Kommentera");
        NyaKomment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NyaKommentActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        Redigeratf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedigeratfActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton2.setText("Redigera kommentar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ComboIdKommentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboIdKommentarActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton3.setText("Ta bort kommentar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(102, 153, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Kommentarer");

        Tillbacka.setText("Tillbaka");
        Tillbacka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TillbackaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Tillbacka)
                .addGap(82, 82, 82))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tillbacka))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NyaKomment, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(NyKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(ComboIdKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11))))
                            .addComponent(Redigeratf, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(315, 315, 315))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboIdKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Redigeratf, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NyKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NyaKomment, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NyKommentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NyKommentarActionPerformed

    }//GEN-LAST:event_NyKommentarActionPerformed
//Skickar nya kommentarer till databasen kontrolleras mot valideringklassen. 
    private void NyaKommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NyaKommentActionPerformed
        if (Validering.textFaltHarVarde(NyKommentar)) {
            String NYid = "1";
            int idd = Integer.parseInt(NYid);

            try {

                String kollaid = bloggdb.fetchSingle("select max (kommentarid)from kommentar ");
                if (kollaid == null) {

                    bloggdb.insert("INSERT INTO KOMMENTAR(KOMMENTARID,TEXT,ANSTALLDID,POSTID) VALUES (" + idd + ",'" + NyKommentar.getText() + "'," + "'" + id + "'," + "'" + postID + "')");

                } else {
                    String nyaid = bloggdb.fetchSingle("select max (kommentarid)from kommentar");

                    int nyaidint = Integer.parseInt(nyaid);

                    nyaidint++;

                    bloggdb.insert("INSERT INTO KOMMENTAR(KOMMENTARID,TEXT,ANSTALLDID,POSTID) VALUES (" + nyaidint + ",'" + NyKommentar.getText() + "'," + "'" + id + "'," + "'" + postID + "')");

                }
                NyKommentar.setText(null);
                AllaKommentarer();
                Dinakommentar();
                läggakommentarId();
                läggakommentarIDRadigera();

            } catch (InfException e) {

                JOptionPane.showMessageDialog(null, "Något gick fel!");

            }

        }

    }//GEN-LAST:event_NyaKommentActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void RedigeratfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedigeratfActionPerformed

    }//GEN-LAST:event_RedigeratfActionPerformed
//Redigera en gammal kommentar, kontrolleras mot valideringsklassen och ersätter den gamla i databasen. 
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if (Validering.textFaltHarVarde(Redigeratf)) {

            try {
                bloggdb.update("update kommentar set text='" + Redigeratf.getText() + "'where kommentarid='" + jComboBox2.getSelectedItem().toString() + "';");
                Redigeratf.setText(null);
                Dinakommentar();
                läggakommentarId();
                AllaKommentarer();
                läggakommentarIDRadigera();

            } catch (InfException ex) {

                JOptionPane.showMessageDialog(null, "Välj en kommentar först!");
            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, "Välj en kommentar först!");

            }

        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void ComboIdKommentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboIdKommentarActionPerformed

    }//GEN-LAST:event_ComboIdKommentarActionPerformed

    //en metod för att ta bort en kommnetar  i Comboboxen och tar bort i databasen. 
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {

            bloggdb.delete("DELETE FROM KOMMENTAR WHERE KOMMENTARID = '" + ComboIdKommentar.getSelectedItem().toString() + "';");

            Dinakommentar();
            läggakommentarId();
            AllaKommentarer();
            läggakommentarIDRadigera();
        } catch (InfException ex) {
            JOptionPane.showMessageDialog(null, "Det finns inget värde.");

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Det finns inget värde");

        }


    }//GEN-LAST:event_jButton3ActionPerformed
//En tillbakaknapp för att gå till föregående sidan beroende på om man är Admin eller User visas sidan upp.
    private void TillbackaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TillbackaActionPerformed
        String typ = userId.UserTyp(id);

        if (typ.equals("N")) {
            HuvudmenyUser huvM = new HuvudmenyUser(id);
            huvM.setVisible(true);
            dispose();
        } else {

            VisaInlagg visI = new VisaInlagg(id, postID);
            visI.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_TillbackaActionPerformed
//En metod som returnerar alla kommentarer i en ArrayList
    public ArrayList hamtakommentar() {
        ArrayList<String> kommentarId = null;

        try {
            kommentarId = bloggdb.fetchColumn("SELECT KOMMENTARID FROM KOMMENTAR WHERE ANSTALLDID='" + id + "'AND POSTID='" + postID + "';");
        } catch (InfException ex) {
            JOptionPane.showConfirmDialog(null, "Något gick fel");
        }
        return kommentarId;

    }
//Lägger alla kommentarer från förra "hamtakommentar" metoden och läggs in i jComboBoxen. 
    public void läggakommentarId() {
        ComboIdKommentar.removeAllItems();
        ArrayList<String> Lista = hamtakommentar();

        if (Lista != null) {
            int i = 0;
            while (i < Lista.size()) {

                ComboIdKommentar.addItem(Lista.get(i));

                i++;
            }

        }

    }
//Lägger alla kommentarer från "hamtakommentar" metoden loopas igenom och sedan visas in i Comboboxen
    public void läggakommentarIDRadigera() {
        jComboBox2.removeAllItems();

        ArrayList<String> Lista = hamtakommentar();

        if (Lista != null) {
            int i = 0;
            while (i < Lista.size()) {

                jComboBox2.addItem(Lista.get(i));

                i++;
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Comment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Comment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Comment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Comment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Comment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboIdKommentar;
    private javax.swing.JTextField NyKommentar;
    private javax.swing.JButton NyaKomment;
    private javax.swing.JTextField Redigeratf;
    private javax.swing.JButton Tillbacka;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
